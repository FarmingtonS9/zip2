[package]
name = "zip"
version = "1.1.3"
authors = [
    "Mathijs van de Nes <git@mathijs.vd-nes.nl>",
    "Marli Frost <marli@frost.red>",
    "Ryan Levick <ryan.levick@gmail.com>",
    "Chris Hennick <hennickc@amazon.com>",
]
license = "MIT"
repository = "https://github.com/zip-rs/zip2.git"
keywords = ["zip", "archive"]
rust-version = "1.70.0"
description = """
Library to support the reading and writing of zip files.
"""
edition = "2021"
exclude = ["tests/**", "examples/**", ".github/**", "fuzz/**"]
build = "src/build.rs"

[workspace.dependencies]
time = { version = "0.3.36", default-features = false }

[dependencies]
aes = { version = "0.8.4", optional = true }
async-stream = { version = "0.3.5", optional = true }
byteorder = "1.5.0"
bzip2 = { version = "0.4.4", optional = true }
chrono = { version = "0.4.38", optional = true }
cfg-if = "1"
constant_time_eq = { version = "0.3.0", optional = true }
crc32fast = "1.4.0"
displaydoc = "0.2.4"
thiserror = "1.0.48"
flate2 = { version = "1.0.28", default-features = false, optional = true }
futures-core = { version = "0.3", optional = true }
futures-util = { version = "0.3", optional = true }
hmac = { version = "0.12.1", optional = true, features = ["reset"] }
indexmap = { version =  "2", features = ["rayon"], optional = true }
libc = { version = "0.2.148", optional = true }
num_enum = "0.6.1"
once_cell = { version = "1.18.0", optional = true }
parking_lot = { version = "0.12.1", features = ["arc_lock"], optional = true }
pbkdf2 = { version = "0.12.2", optional = true }
rayon = { version = "1.8.0", optional = true }
sha1 = { version = "0.10.6", optional = true }
static_assertions = { version = "1.1.0", optional = true }
tempfile = { version = "3.8.0", optional = true }
time = { workspace = true, optional = true, features = [
    "std",
] }
zstd = { version = "0.13.1", optional = true, default-features = false }
tokio = { version = "1", features = ["rt", "io-util", "sync", "fs", "macros"], optional = true }
tokio-pipe = { git = "https://github.com/cosmicexplorer/tokio-pipe", rev = "c44321ae17b4324a8ccaa4f687a8f68259fdca30", optional = true }
tokio-stream = { version = "0.1.14", optional = true }
zopfli = { version = "0.8.0", optional = true }
deflate64 = { version = "0.1.8", optional = true }
lzma-rs = { version = "0.3.0", default-features = false, optional = true }

[dependencies.memchr2]
version = "2.6.4"
optional = true
package = "memchr"

[target.'cfg(any(all(target_arch = "arm", target_pointer_width = "32"), target_arch = "mips", target_arch = "powerpc"))'.dependencies]
crossbeam-utils = "0.8.19"

[target.'cfg(fuzzing)'.dependencies]
arbitrary = { version = "1.3.2", features = ["derive"] }

[dev-dependencies]
bencher = "0.1.5"
criterion = { version = "0.5", features = ["async_tokio"] }
getrandom = "0.2.14"
tempfile = "3.8.0"
time = { workspace = true, features = ["formatting", "macros"] }
tokio = { version = "1", features = ["rt", "rt-multi-thread"] }
tokio-test = "0.4.3"
uuid = { version = "1.4.1", features = ["v4"] }
walkdir = "2.5.0"

[features]
aes-crypto = ["aes", "constant_time_eq", "hmac", "pbkdf2", "sha1"]
chrono = ["chrono/default"]
_deflate-any = []
deflate = ["flate2/rust_backend", "_deflate-any"]

# DEPRECATED: previously enabled `flate2/miniz_oxide` which is equivalent to `flate2/rust_backend`
deflate-miniz = ["deflate", "_deflate-any"]

deflate-zlib = ["flate2/zlib", "_deflate-any"]
deflate-zlib-ng = ["flate2/zlib-ng", "_deflate-any"]
deflate-zopfli = ["zopfli", "_deflate-any"]
lzma = ["lzma-rs/stream"]
tokio-async = [
  "dep:tokio", "dep:memchr2", "dep:tokio-stream", "dep:tokio-pipe", "dep:parking_lot", "dep:libc", "dep:futures-core",
  "dep:futures-util", "dep:async-stream", "dep:indexmap", "dep:once_cell", "dep:static_assertions", "dep:rayon",
  "dep:tempfile",
]
unreserved = []
default = [
    "aes-crypto",
    "bzip2",
    "deflate",
    "deflate64",
    "deflate-zlib-ng",
    "deflate-zopfli",
    "lzma",
    "time",
    "zstd",
    "tokio-async"
]

[[bench]]
name = "read_entry"
harness = false

[[bench]]
name = "read_metadata"
harness = false

[[bench]]
name = "extract"
harness = false

# [[bench]]
# name = "merge_archive"
# harness = false

[profile.release]
strip                   = false
debug                   = true
# lto                     = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
